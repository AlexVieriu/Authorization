FrankLiu: 

-- Ep1(2:50) --
Authentication(): verify you are how you say you are(Login & Pass) & generate the security context
Security Context: all your Identity info that is relevant to the facility


Authorization() : verifying the security context satisfies the access requirements


Ep2

-> HttpRequest -> Verify Credentials -> get the credential from the database and put them into the claims
-> Generating Security Context

Cookie: -> it is stored in the Header of a HttpRequest/HttpResponse

Ep7(2:50)

-- app.UseAuthentication() -- 
-> when the authentication middleware is looking at the HttpRequest, Httpcontext can see the Header that contains 
the coockie, will decode the coockie and then populate the Security Context/ Claims Principals with values 
translated from the cookies

https://docs.microsoft.com/en-us/dotnet/api/microsoft.aspnetcore.authentication.iauthenticationservice?view=aspnetcore-5.0


--- Theory ---

Authorization : Indetity (identify the user)
Authorization : Grand permision to the User


Implement services.AddAuthentication:
https://stackoverflow.com/questions/52708364/net-core-isauthenticated-false-even-if-i-use-manually-httpcontext-signinasync/52710107#52710107


Token vs Cookie: 
https://stackoverflow.com/questions/37582444/jwt-vs-cookies-for-token-based-authentication#:~:text=One%20difference%20is%20that%20cookies%20are%20for%20sending,That%20data%20is%20often%20encoded%20as%20a%20JWT.
-> the biggest difference between bearer tokens and cookies is that the browser will automatically send cookies, 
where bearer tokens need to be added explicitly to the HTTP request.


Token vs Cookie: 
-> https://www.youtube.com/watch?v=UBUNrFtufWo&ab_channel=Fireship


Authentication on the Web (Sessions, Cookies, JWT, localStorage, and more)
-> https://www.youtube.com/watch?v=2PPSXonhIck&ab_channel=CodeRealm
